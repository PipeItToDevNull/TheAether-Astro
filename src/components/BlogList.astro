---
import { getCollection } from 'astro:content';
import { Card, CardGrid } from '@astrojs/starlight/components';

// Fetch the "blog" collection
let posts = await getCollection('blog');

// Sort posts by creation date (newest first)
posts = posts.sort((a, b) => {
  const dateA = new Date(a.data.created || '1970-01-01'); // Default to earliest date if missing
  const dateB = new Date(b.data.created || '1970-01-01');
  return dateB - dateA; // Sort descending
});

// Helper function to convert id's to human-readable titles
const toReadableTitle = (id) => {
  return id
    .replace(/-/g, ' ') // Replace dashes with spaces
    .replace(/\b\w/g, (char) => char.toUpperCase()); // Capitalize each word
};

// Helper function to format dates as yyyy/mm/dd
const formatDate = (date) => {
  if (!date) return 'No Creation Date';
  const d = new Date(date);
  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}-${String(d.getDate()).padStart(2, '0')}`;
};
---

<section>
    {posts.map((post) => {
      // Use the filename as the title if no title is provided
      const id = post.id.split('/').pop(); // Extract the id from the path
      const title = post.data.title || toReadableTitle(id);

      return (
        <Card title={title}>
          <p>Created: {formatDate(post.data.created)}</p>
          <p>Last Updated: {formatDate(post.data.modified)}</p>
          <p>Tags: {post.data.tags ? post.data.tags.join(', ') : 'No Tags'}</p>
          <p><a href={`/blog/${post.id}`}>Read this post</a></p>
        </Card>
      );
    })}
</section>
